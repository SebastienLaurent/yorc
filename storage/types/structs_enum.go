// Copyright 2019 Bull S.A.S. Atos Technologies - Bull, Rue Jean Jaures, B.P.68, 78340, Les Clayes-sous-Bois, France.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-enum
// DO NOT EDIT!

package types

import (
	"fmt"
	"strings"
)

const (
	// StoreTypeDeployment is a StoreType of type Deployment
	StoreTypeDeployment StoreType = iota
	// StoreTypeLog is a StoreType of type Log
	StoreTypeLog
	// StoreTypeEvent is a StoreType of type Event
	StoreTypeEvent
)

const _StoreTypeName = "DeploymentLogEvent"

var _StoreTypeNames = []string{
	_StoreTypeName[0:10],
	_StoreTypeName[10:13],
	_StoreTypeName[13:18],
}

// StoreTypeNames returns a list of possible string values of StoreType.
func StoreTypeNames() []string {
	tmp := make([]string, len(_StoreTypeNames))
	copy(tmp, _StoreTypeNames)
	return tmp
}

var _StoreTypeMap = map[StoreType]string{
	0: _StoreTypeName[0:10],
	1: _StoreTypeName[10:13],
	2: _StoreTypeName[13:18],
}

// String implements the Stringer interface.
func (x StoreType) String() string {
	if str, ok := _StoreTypeMap[x]; ok {
		return str
	}
	return fmt.Sprintf("StoreType(%d)", x)
}

var _StoreTypeValue = map[string]StoreType{
	_StoreTypeName[0:10]:  0,
	_StoreTypeName[10:13]: 1,
	_StoreTypeName[13:18]: 2,
}

// ParseStoreType attempts to convert a string to a StoreType
func ParseStoreType(name string) (StoreType, error) {
	if x, ok := _StoreTypeValue[name]; ok {
		return x, nil
	}
	return StoreType(0), fmt.Errorf("%s is not a valid StoreType, try [%s]", name, strings.Join(_StoreTypeNames, ", "))
}
